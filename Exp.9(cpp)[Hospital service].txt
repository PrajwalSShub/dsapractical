#include<iostream>
#include<string>

#define N 20

#define SERIOUS 10
#define NONSERIOUS 5
#define CHECKUP 1

using namespace std;

string Q[N];
int Pr[N];
int r = -1, f = -1;

void enqueue(string name, int p)
{
    int i;
    if ((r + 1) % N == f)  // Check for circular queue full condition
    {
        cout << "Queue is full" << endl;
    }
    else {
        if (f == -1) {  // If queue is empty, insert the first element
            f = r = 0;
            Q[r] = name;
            Pr[r] = p;
        }
        else {  // Insert based on priority
            int i;
            for (i = r; i >= f; i--) {
                if (p > Pr[i]) {
                    Q[i + 1] = Q[i];
                    Pr[i + 1] = Pr[i];
                }
                else break;
            }
            Q[i + 1] = name;
            Pr[i + 1] = p;
            r = (r + 1) % N;  // Circular increment of r
        }
    }
}

void print() {
    if (f == -1) {
        cout << "Queue is Empty" << endl;
        return;
    }
    for (int i = f; i != (r + 1) % N; i = (i + 1) % N) {
        cout << "Patient's Name: " << Q[i] << " - ";
        switch (Pr[i]) {
            case 1:
                cout << "Priority - 'Checkup'" << endl;
                break;
            case 5:
                cout << "Priority - 'Non-serious'" << endl;
                break;
            case 10:
                cout << "Priority - 'Serious'" << endl;
                break;
            default:
                cout << "Priority not found" << endl;
        }
    }
}

void dequeue() {
    if (f == -1) {
        cout << "Queue is Empty" << endl;
    }
    else {
        cout << "Deleted Element = " << Q[f] << endl;
        if (f == r) f = r = -1;
        else f = (f + 1) % N;  // Circular increment of f
    }
}

int main()
{
    string name;
    int opt, n, p;

    while (1) {
        cout << "\nMenu \n 1) Insert Data in Queue" << endl
             << " 2) Show the Data in Queue " << endl
             << " 3) Delete data from the Queue" << endl
             << " 4) Exit" << endl;
        cin >> opt;

        switch (opt) {
            case 1:
                cout << "Enter the number of patients: " << endl;
                cin >> n;
                for (int i = 0; i < n; i++) {
                    cout << "Enter patient's name: ";
                    cin >> name;

                    cout << "Enter patient's priority (0: Serious, 1: Non-serious, 2: General checkup): ";
                    cin >> p;

                    switch (p) {
                        case 0:
                            enqueue(name, SERIOUS);
                            break;
                        case 1:
                            enqueue(name, NONSERIOUS);
                            break;
                        case 2:
                            enqueue(name, CHECKUP);
                            break;
                        default:
                            cout << "Invalid priority!" << endl;
                    }
                }
                break;

            case 2:
                print();
                break;

            case 3:
                dequeue();
                break;

            case 4:
                return 0;  // Exit the program

            default:
                cout << "Incorrect Choice" << endl;
        }
    }

    return 0;
}
