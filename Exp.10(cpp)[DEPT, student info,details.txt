#include<iostream>
#include<stdlib.h>
#include<fstream>
#include<string.h>
#include<iomanip>

using namespace std;

class student {
    string name, div, address;
    int roll;
public:
    void getdata();
    void displayAll();
    void insert_record();
    void delete_record();
    void search_record();
};

void student::getdata() {
    cout << "\nEnter Roll No, Division, Name and Address of Student= ";
    cin >> roll >> div >> name >> address;
}

void student::insert_record() {
    fstream out;
    out.open("Record11.txt", ios::app | ios::binary);
    student s1;  // Use the local object instead of new
    s1.getdata();
    out.write((char*)&s1, sizeof(s1));  // Write the object
    out.close();
}

void student::displayAll() {
    fstream out;
    out.open("Record11.txt", ios::in | ios::binary);
    student s2;  // Use the local object instead of new
    
    cout << "\nThe Contents of file are.......\n\n";
    cout << "\nROLL" << setw(15) << "Division" << setw(15) << "NAME" << setw(15) << "ADDRESS\n";
    
    while (out.read((char*)&s2, sizeof(s2))) {
        cout << "\n" << s2.roll << setw(15) << s2.div << setw(15) << s2.name << setw(15) << s2.address;
    }
    cout << "\n";
    out.close();
}

void student::delete_record() {
    fstream out, temp;
    student s2;
    int item;
    out.open("Record11.txt", ios::in | ios::binary);
    temp.open("temp.txt", ios::out | ios::binary);
    cout << "\nEnter Roll_No to delete: ";
    cin >> item;

    while (out.read((char*)&s2, sizeof(s2))) {
        if (s2.roll != item) {
            temp.write((char*)&s2, sizeof(s2));  // Copy only records that don't match
        }
    }
    out.close();
    temp.close();

    remove("Record11.txt");  // Remove the original file
    rename("temp.txt", "Record11.txt");  // Rename the temp file to original file name
}

void student::search_record() {
    int item, flag = 0;
    student s2;
    fstream out;
    out.open("Record11.txt", ios::in | ios::binary);
    cout << "\nEnter Roll_No to search: ";
    cin >> item;

    while (out.read((char*)&s2, sizeof(s2))) {
        if (s2.roll == item) {
            cout << "\n Record is Present in the File....\n ";
            cout << "\n" << s2.roll << "\t" << s2.div << "\t" << s2.name << "\t" << s2.address;
            flag = 1;
            break;
        }
    }
    if (flag == 0) {
        cout << endl << "Sorry. No such Record Present" << endl;
    }
    out.close();
}

int main() {
    student t1;
    int ch;
    fstream out;
    out.open("Record11.txt", ios::out);
    out.close();  // Create an empty file at the start

    while (1) {
        cout << "\n*******  SEQUENTIAL ACCESS FILE PROGRAM USING C++ ********** \n\n";
        cout << "\n1. INSERT RECORD\n2. DISPLAY All Records\n3. SEARCH\n4. Delete\n5. EXIT.";
        cout << "\nEnter Your Choice: ";
        cin >> ch;
        switch (ch) {
            case 1:
                t1.insert_record();
                cout << "\n\nRecord is Inserted..\n\n";
                break;
            case 2:
                t1.displayAll();
                break;
            case 3:
                t1.search_record();
                break;
            case 4:
                t1.delete_record();
                break;
            case 5:
                exit(0);
            default:
                cout << "Incorrect Choice\n";
        }
    }
    return 0;
}
